Declarative pipeline :


currentBuild.displayName = "projectname-#"+currentBuild.number // To change the build displayName on UI.

pipeline{
                agent any
                
                enviroment{
                //declaring enviromental varaiables
                
                mvnHOME = "/opt/maven3"
                javaHOME = "/opt/escm/acm/tools/java1.8.0"
                PATH = "{$mvnHOME}/bin:{$javaHOME}/bin:$PATH"
                }
                
                stages{
                                stage("clone source code from git"){
                                                                steps{
                                                                                //CLONE 
                                                                                sh echo "cloning started"
                                                                                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], gitTool: 'Default', submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'e5d4197c-5398-45d6-bc58-618314fce50d', url: 'ssh://git@escmstash.1dc.com:7999/abhi_test/abhi_test1.git']]])
                                                                                sh echo "cloning completed"
                                                                }
                                                }
                                                
                                stage ('Build') {
            steps {
                sh 'mvn -Dmaven.test.failure.ignore=true install' 
            }
            post {
                success {
                    junit 'target/surefire-reports/**/*.xml' 
                }
            }
        }
                                
                                stage("Deploy to dev"){
                                                steps{
                                                                sshagent(['tomcat-new']){ //add sshagent plugin to jenkins //download and configure the tomcat server
                                                                sh """ 
                                                                
                                                                ssh username@ip_address /opt/tomcat8/bin/shutdown.sh // moving from jenkins server to target(tomcat server) server and stoping the tomcat server
                                                                
                                                                scp -o StrictHostKeyChecking=no target/myweb.jar username@ip_address:/opt/tomcat8/webapps //transfering files to tomcat server with "scp" command
                                                                
                                                                ssh username@ip_address /opt/tomcat8/bin/shutdown.sh // moving from jenkins server to target(tomcat server) server and starting the tomcat server
                                                                
                                                                """
                                                                }
                                                
                                                }
                                }
                                
                }

